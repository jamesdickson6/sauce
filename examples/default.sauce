appname = "yourCoolApp"
Sauce.brew(appname) do |app|
  app.load do
    # Load Recipes
    load("capistrano/recipes/standard") # invoke and shell tasks
    load("sauce/recipes/app/base") # default deployment tasks
    load("sauce/recipes/setup") # default environment setup tasks
    # Configure application...
    set :application, appname
    set :scm, "git"
    set :repository, "git@github.com:yourCompany/#{appname}.git"
    set(:deploy_to) { "/home/#{fetch(:user)}/kitchen/#{appname}" } # Linux   
    #set :scm_user, :some_user
    #set :scm_password, :some_password
    _cset :branch, "master"
    _cset :deploy_via, "remote_cache"
  end

  # LOCAL
  app.environment("local") do |env|
    env.load do
      # Servers: name, [roles], {opts}
      server "127.0.0.1", :web, :app, :db, {:primary_web=>true, :primary_db => true}
      # Configure environment...
    end
  end

  # STAGING
  app.environment("staging") do |env|
    env.load do
      # Servers: name, [roles], {opts}
      server "staging.#{appname}.com", :web, :app, :db, :job, {:primary_web=>true, :primary_db => true}
      # Configure environment...
    end
  end

  # PRODUCTION
  app.environment("production") do |env|
    env.load do
      # Servers
      server "web1.#{appname}.com", :web, :app, {:primary_web=>true, :primary_db => true}
      server "web2.#{appname}.com", :web, :app, {}
      server "job1.#{appname}.com", :job, {}
      server "db1.#{appname}.com", :db, {:primary_db => true}
      server "db2.#{appname}.com", :db, {}
      # Configure environment...
    end
  end

end

